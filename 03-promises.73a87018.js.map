{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,sBAClCE,YAAaH,SAASC,cAAc,wBACpCG,OAAQJ,SAASC,cAAc,SAG3BI,EAAc,CAClBC,WAAY,EACZC,KAAM,EACNC,OAAQ,EACRC,SAAU,EACVC,MAAO,GA2BT,SAASC,EAAqBC,GAC5BC,EAAAjB,GAASkB,OAAOC,QAAQH,GACxBI,QAAQC,IAAIL,E,CAGd,SAASM,EAAmBC,GAC1BN,EAAAjB,GAASkB,OAAOM,QAAQD,GACxBH,QAAQC,IAAIE,E,CAGd,SAASE,GAAYZ,SAACA,EAAQC,MAAEA,IAE9B,MAAMY,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAE3BC,YAAW,KACLN,EACFI,EAAQ,qBAAqBjB,QAAeC,OAE5CiB,EAAO,oBAAoBlB,QAAeC,MAAU,GAErDA,EAAM,G,CA9CbZ,EAAKC,WAAW8B,iBAAiB,SAmFjC,SAAsBC,GACpBzB,EAAwB,WAAI,GAAGyB,EAAIC,OAAOC,O,IAnF5ClC,EAAKI,UAAU2B,iBAAiB,SAsFhC,SAAqBC,GACnBzB,EAAkB,KAAI,GAAGyB,EAAIC,OAAOC,O,IAtFtClC,EAAKK,YAAY0B,iBAAiB,SAyFlC,SAAuBC,GACrBzB,EAAoB,OAAI,GAAGyB,EAAIC,OAAOC,O,IAzFxClC,EAAKM,OAAOyB,iBAAiB,UAAYC,IACvCA,EAAIG,iBACJ,IAAK,IAAIC,EAAQ,EAAGA,EAAQ7B,EAAYG,OAAQ0B,GAAS,EACvDlB,QAAQC,IAAIZ,EAAYI,UAAY,GACC,IAAjC0B,OAAO9B,EAAYI,UACvBJ,EAAYK,OAASyB,OAAO9B,EAAYC,YAExCD,EAAYK,OAASyB,OAAO9B,EAAYE,MAG1CS,QAAQC,IAAIZ,EAAYK,OACtBW,EAAYhB,GAAa+B,KAAKzB,GAAsB0B,MAAMnB,GAG5DpB,EAAKM,OAAOkC,QACZjC,EAAYI,SAAW,EACvBJ,EAAYK,MAAQ,CAAC,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n  formEl: document.querySelector('form')\n};\n\nconst dataPromise = {\n  firstDelay: 0,\n  step: 0,\n  amount: 0,\n  position: 0,\n  delay: 0,\n};\n\nrefs.inputDelay.addEventListener('input', onInputDelay);\nrefs.inputStep.addEventListener('input', onInputStep);\nrefs.inputAmount.addEventListener('input', onInputAmount);\nrefs.formEl.addEventListener('submit', ((evt) => {\n  evt.preventDefault()\n  for (let index = 0; index < dataPromise.amount; index += 1) {\n    console.log(dataPromise.position += 1)\n    if (Number(dataPromise.position) === 1) {\n    dataPromise.delay += Number(dataPromise.firstDelay);\n  } else {\n    dataPromise.delay += Number(dataPromise.step);\n  }\n  \n  console.log(dataPromise.delay)\n    makePromise(dataPromise).then(onMakePromiseSuccess).catch(onMakePromiseError);\n    \n  }\n  refs.formEl.reset();\n  dataPromise.position = 0;\n  dataPromise.delay = 0;\n}));\n\n// makePromise(dataPromise) .then(onMakePromiseSuccess).catch(onMakePromiseError);\n\nfunction onMakePromiseSuccess(result) {\n  Notiflix.Notify.success(result)\n  console.log(result)\n}\n\nfunction onMakePromiseError(error) {\n  Notiflix.Notify.failure(error);\n  console.log(error)\n}\n\nfunction makePromise({position, delay}) {\n\n  const shouldResolve = Math.random() > 0.5;\n \n  return new Promise((resolve, reject) => {\n\n    setTimeout(() => {     \n      if (shouldResolve) {\n        resolve(`Fulfilled promise ${position} in ${delay}ms`)\n      } else {\n        reject(`Rejected promise ${position} in ${delay}ms`)\n      }\n    }, delay)\n      //   if (amount > position) {\n  //     setTimeout((() => {\n  //       console.log(position += 1);\n  //       delay += Number(firstDelay);\n  //       const shouldResolve = Math.random() > 0.5;\n  //       if (shouldResolve) {\n  //       resolve(`Fulfilled promise ${position} in ${delay}ms`)\n  //       } else {\n  //       reject(`Rejected promise ${position} in ${delay}ms`);\n  //     }\n      \n      \n  //       if (amount > position) {\n  //         const intervalPromise = setInterval((() => {\n  //           console.log(position += 1);\n  //           delay += Number(step);\n  //           const shouldResolve = Math.random() > 0.5;\n  //       if (shouldResolve) {\n  //       resolve(`Fulfilled promise ${position} in ${delay}ms`)\n  //       } else {\n  //       reject(`Rejected promise ${position} in ${delay}ms`);\n  //     }\n            \n            \n  //           if (amount <= position) {\n  //             clearInterval(intervalPromise);\n  //             console.log('Stop!!!');\n  //           }\n  //         }), step)\n  //       }\n  //     // dataPromise.position = 0;\n  //   }), firstDelay)\n  // }\n  })\n}\n\nfunction onInputDelay(evt) {\n  dataPromise[`firstDelay`] = `${evt.target.value}`;\n}\n\nfunction onInputStep(evt) {\n  dataPromise[`step`] = `${evt.target.value}`;\n}\n\nfunction onInputAmount(evt) {\n  dataPromise[`amount`] = `${evt.target.value}`;\n}\n\n// function createPromise({ position, delay }) {\n//   const shouldResolve = Math.random() > 0.5;\n//   if (shouldResolve) {\n//     resolve(`Fulfilled promise ${position} in ${delay}ms`)\n//   } else {\n//     reject(`Fulfilled promise ${position} in ${delay}ms`);\n//   }\n// }\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","inputDelay","document","querySelector","inputStep","inputAmount","formEl","$ce04d3a99e08e73b$var$dataPromise","firstDelay","step","amount","position","delay","$ce04d3a99e08e73b$var$onMakePromiseSuccess","result","$parcel$interopDefault","Notify","success","console","log","$ce04d3a99e08e73b$var$onMakePromiseError","error","failure","$ce04d3a99e08e73b$var$makePromise","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","target","value","preventDefault","index","Number","then","catch","reset"],"version":3,"file":"03-promises.73a87018.js.map"}